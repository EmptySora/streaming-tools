
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Globalization" #>
<#
    string output = File.ReadAllText(this.Host.ResolvePath("AssemblyInfo.cs"));
    Regex pattern = new Regex("AssemblyVersion\\(\"(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<revision>\\d+)\\.(?<build>\\d+)\"\\)");
    MatchCollection matches = pattern.Matches(output);
    config = this.Host.ResolveParameterValue("-","-","Configuration");
        if( matches.Count == 1 )
        {
        major = Convert.ToInt32(matches[0].Groups["major"].Value);
        minor = Convert.ToInt32(matches[0].Groups["minor"].Value);
        build = Convert.ToInt32(matches[0].Groups["build"].Value) + 1;
        revision = Convert.ToInt32(matches[0].Groups["revision"].Value);
        if (config == "Release") {
            revision++;
        }
    }
    runtime = Environment.Version.ToString();
    year = DateTime.Now.Year;
    genstamp = string.Format("{0} at {1}",DateTime.Now.ToLongDateString(),DateTime.Now.ToLongTimeString());
    genstampUtc = string.Format("{0}",DateTime.UtcNow.ToString("s",CultureInfo.InvariantCulture) + "Z");
    aTitle = "WinAudioLevels";
    aDescription = "Provides a WebSocket server to allow local web applications to have access to the audio levels on the system.";
    aCompany = "EmptySora_";
    aProduct = "WinAudioLevels";
    aCopyright = "Copyright EmptySora_© 2021-" + year;
    aTrademark = "";
    aCulture = "";
    aGuid = "a51ec718-6d6a-462f-820e-e6426335c1c0";
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: <#= this.runtime #>
//     Generated At: <#= this.genstamp #>
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

[assembly: AssemblyTitle("<#= this.aTitle #>")]
[assembly: AssemblyDescription("<#= this.aDescription #>")]
#if DEBUG
[assembly: AssemblyConfiguration("debug")]
#else
[assembly: AssemblyConfiguration("release")]
#endif
[assembly: AssemblyCompany("<#= this.aCompany #>")]
[assembly: AssemblyProduct("<#= this.aProduct #>")]
[assembly: AssemblyCopyright("<#= this.aCopyright #>")]
[assembly: AssemblyTrademark("<#= this.aTrademark #>")]
[assembly: AssemblyCulture("<#= this.aCulture #>")]
[assembly: ComVisible(false)]
[assembly: Guid("<#= this.aGuid #>")]
[assembly: AssemblyVersion("<#= this.major #>.<#= this.minor #>.<#= this.revision #>.<#= this.build #>")]
[assembly: AssemblyFileVersion("<#= this.major #>.<#= this.minor #>.<#= this.revision #>.<#= this.build #>")]
#if DEBUG
[assembly: AssemblyInformationalVersion("<#= this.major #>.<#= this.minor #>.<#= this.revision #>.<#= this.build #>δ<#= this.infoversion #> (build #<#= this.build #> at <#= this.genstampUtc #>)")]
#else
[assembly: AssemblyInformationalVersion("<#= this.major #>.<#= this.minor #>.<#= this.revision #>.<#= this.build #>ρ<#= this.infoversion #> (build #<#= this.build #> at <#= this.genstampUtc #>)")]
#endif

namespace WinAudioLevels {
    static class AssemblyDetails {
         public const string ASSEMBLY_TITLE = "<#= this.aTitle #>";
         public const string ASSEMBLY_DESCRIPTION = "<#= this.aDescription #>";
         public const string ASSEMBLY_COMPANY = "<#= this.aCompany #>";
         public const string ASSEMBLY_PRODUCT = "<#= this.aProduct #>";
         public const string ASSEMBLY_COPYRIGHT = "<#= this.aCopyright #>";
         public const string ASSEMBLY_TRADEMARK = "<#= this.aTrademark #>";
         public const string ASSEMBLY_CULTURE = "<#= this.aCulture #>";
         public const bool COM_VISIBLE = false;
         public const string GUID = "<#= this.aGuid #>";
         public const string ASSEMBLY_VERSION = "<#= this.major #>.<#= this.minor #>.<#= this.revision #>.<#= this.build #>";
         public const string ASSEMBLY_FILE_VERSION = "<#= this.major #>.<#= this.minor #>.<#= this.revision #>.<#= this.build #>";
         #if DEBUG
         public const string ASSEMBLY_CONFIGURATION = "debug";
         public const string ASSEMBLY_INFORMATIONAL_VERSION = "<#= this.major #>.<#= this.minor #>.<#= this.revision #>.<#= this.build #>δ<#= this.infoversion #> (build #<#= this.build #> at <#= this.genstampUtc #>)";
         #else
         public const string ASSEMBLY_CONFIGURATION = "release";
         public const string ASSEMBLY_INFORMATIONAL_VERSION = "<#= this.major #>.<#= this.minor #>.<#= this.revision #>.<#= this.build #>ρ<#= this.infoversion #> (build #<#= this.build #> at <#= this.genstampUtc #>)";
         #endif
    }
}

<#+
    int major = 0;
    int minor = 1;
    int revision = 4;
    int build = 14;
    string runtime = "";
    string aTitle = "";
    string aDescription = "";
    string aCompany = "";
    string aProduct = "";
    string aTrademark = "";
    string aCopyright = "";
    string aCulture = "";
    string aGuid = "";
    int year = 0;
    string config = "";
    string genstamp = "";
    string infoversion = "α";
    string genstampUtc = "";
#>